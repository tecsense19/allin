{
    "openapi": "3.0.0",
    "info": {
        "title": "API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/"
        }
    ],
    "paths": {
        "/api/v1/call-log": {
            "post": {
                "tags": [
                    "Call Logs"
                ],
                "summary": "Store a new call log",
                "operationId": "21ec3556e8f47a38c003c8960791b65d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "receiver_id",
                                    "call_start_time",
                                    "call_end_time"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "receiver_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 2
                                    },
                                    "call_start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-05-27T14:00:00Z"
                                    },
                                    "call_end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-05-27T14:20:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Call log created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "time_min": {
                                            "type": "integer",
                                            "example": 20
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/text-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new message",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "textMessage",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "receiver_id",
                                    "message"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "message": {
                                        "description": "Content of the message",
                                        "type": "string",
                                        "example": "This is a test message.",
                                        "nullable": true
                                    },
                                    "receiver_id": {
                                        "description": "ID of the receiver",
                                        "type": "string",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/update-text-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Update an existing message",
                "description": "Update the content of an existing message by its message ID.",
                "operationId": "updateMessage",
                "requestBody": {
                    "description": "Update Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id",
                                    "message",
                                    "timezone"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "ID of the message to be updated",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "message": {
                                        "description": "Updated content of the message",
                                        "type": "string",
                                        "example": "This is an updated test message.",
                                        "nullable": true
                                    },
                                    "timezone": {
                                        "description": "Timezone of the user making the request",
                                        "type": "string",
                                        "example": "America/New_York",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Message not found"
                    },
                    "400": {
                        "description": "Invalid Request"
                    },
                    "403": {
                        "description": "Unauthorized to update message"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group-text-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new group message",
                "description": "Create a new group message along with its sender, receiver group, and push notifications.",
                "operationId": "groupTextMessage",
                "requestBody": {
                    "description": "Add Group Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "group_id",
                                    "message"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "message": {
                                        "description": "Content of the message",
                                        "type": "string",
                                        "example": "This is a group message.",
                                        "nullable": true
                                    },
                                    "group_id": {
                                        "description": "ID of the group",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group/question-with-options": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Send a question with options to a group",
                "description": "This endpoint allows sending a question with multiple choice options to a specific group. The options are provided as an array.",
                "operationId": "d283cbe6f64f98197c03fecf8d186dcd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "message",
                                    "group_id"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "The type of message being sent, which should be 'Options' for questions with multiple choices.",
                                        "type": "string",
                                        "example": "Options"
                                    },
                                    "message": {
                                        "description": "The question content for the group, asking them to choose from options.",
                                        "type": "string",
                                        "example": "What is your favorite color?"
                                    },
                                    "group_id": {
                                        "description": "The ID of the group to which the message will be sent.",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "options[]": {
                                        "description": "The options for the users to choose from, required if message_type is 'options'.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Red"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question with options sent successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group Message Sent Successfully!"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error for missing or invalid parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The message content is required."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No members found in the group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No members found in this group."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group/select-option": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "User selects an option (True/False)",
                "description": "This API allows a user to select or deselect an option for a particular option ID. If True, the user is added to the users list, if False, the user is removed from the list.",
                "operationId": "7d8170229ed69bb0531b04a0605dac44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "option_id",
                                    "selected"
                                ],
                                "properties": {
                                    "option_id": {
                                        "description": "The ID of the option being selected.",
                                        "type": "string"
                                    },
                                    "selected": {
                                        "description": "True to add the user to the option, False to remove the user from the option.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Option selection updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option selection updated successfully!"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (missing required fields or invalid data).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option ID is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group/votes/fetch": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Fetch votes for a message by message_id",
                "description": "This endpoint fetches the vote details for a given message_id, including the question and the options with vote counts.",
                "operationId": "bb0f4a12efdd2e6247d1d7c7ef7ff080",
                "parameters": [
                    {
                        "name": "message_id",
                        "in": "query",
                        "description": "The ID of the message to fetch votes for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote details fetched successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vote details fetched successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is your favorite programming language?"
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "option": {
                                                                "type": "string",
                                                                "example": "PHP"
                                                            },
                                                            "vote_count": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: Missing or invalid message_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The 'message_id' parameter is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found: No options message found for the provided message_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No options message found for the provided message_id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/file-upload-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new message",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "fileUploadMessage",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "receiver_id",
                                    "attachment",
                                    "attachment_type"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "receiver_id": {
                                        "description": "ID of the receiver",
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "attachment_type": {
                                        "description": "Like(Image, Audio, Video, Docs, Excel..)",
                                        "type": "string",
                                        "example": "Image"
                                    },
                                    "attachment": {
                                        "description": "Uploaded Attachment name",
                                        "type": "string",
                                        "example": "test.png",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/message-task": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new Task message",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "messageTask",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "receiver_id",
                                    "task_name",
                                    "date",
                                    "time"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "receiver_id": {
                                        "description": "Comma-separated IDs of the receiver",
                                        "type": "string",
                                        "example": "1,2,3,4"
                                    },
                                    "task_name": {
                                        "description": "Enter Task Name",
                                        "type": "string",
                                        "example": "Task name"
                                    },
                                    "checkbox": {
                                        "description": "Array of checkbox",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "CRUD Module"
                                        }
                                    },
                                    "task_description": {
                                        "description": "Enter Task Description",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Description area"
                                        }
                                    },
                                    "date": {
                                        "description": "Date of the task",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-19"
                                    },
                                    "time": {
                                        "description": "Time of the task",
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message Sent Successfully",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/message-task-chat": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new Task Chat message",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "messageTaskChat",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "task_id",
                                    "chat_type"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "Task Chat"
                                    },
                                    "task_id": {
                                        "description": "Enter taskId",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "message": {
                                        "description": "Task Message",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "chat_type": {
                                        "description": "Chat Type (Text / Attachment)",
                                        "type": "string",
                                        "example": "Text"
                                    },
                                    "attachment_type": {
                                        "description": "Attachment Type",
                                        "type": "string",
                                        "example": "jpg"
                                    },
                                    "attachment": {
                                        "description": "Attachment Name",
                                        "type": "string",
                                        "example": "abc.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/message-location": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new message to send location",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "messageLocation",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "receiver_id",
                                    "latitude",
                                    "longitude"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "receiver_id": {
                                        "description": "Enter ReceiverId",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "latitude": {
                                        "description": "Enter latitude",
                                        "type": "string",
                                        "example": "123.123.1"
                                    },
                                    "longitude": {
                                        "description": "Enter longitude",
                                        "type": "string",
                                        "example": "445.123.0"
                                    },
                                    "location_url": {
                                        "description": "Enter location url",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/message-meeting": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new message for meeting",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "messageMeeting",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "receiver_id",
                                    "mode",
                                    "title",
                                    "date",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "receiver_id": {
                                        "description": "Comma-separated IDs of the receiver",
                                        "type": "string",
                                        "example": "1,2,3,4"
                                    },
                                    "mode": {
                                        "description": "Enter Mode of the meeting. (Online  / Offline)",
                                        "type": "string",
                                        "example": "Online"
                                    },
                                    "title": {
                                        "description": "Meeting Title",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "description": "meeting Description",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "date": {
                                        "description": "Meeting date",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "start_time": {
                                        "description": "Meeting Start Time",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "end_time": {
                                        "description": "Meeting End Time",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "meeting_url": {
                                        "description": "Meeting URL",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "latitude": {
                                        "description": "Meeting latitude",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "longitude": {
                                        "description": "Meeting longitude",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "location_url": {
                                        "description": "Meeting location URL",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "location": {
                                        "description": "Meeting location",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/file-upload": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Upload a file",
                "description": "Upload a file and store its information.",
                "operationId": "uploadFile",
                "requestBody": {
                    "description": "Upload File Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/unread-message-count": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Get count of unread messages for specified types",
                "description": "Retrieve the total count of unread messages for the given message_type values (e.g., 'Meetings', 'Task', 'event')",
                "operationId": "getUnreadMessageCount",
                "requestBody": {
                    "description": "Filter by message type",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "Comma-separated message types to filter",
                                        "type": "string",
                                        "example": "Meeting,Task,event"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Unread message count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unread message count retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "unread_count": {
                                                    "description": "Total unread messages count",
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/read-unread-manage": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new message for meeting",
                "description": "Change Message status",
                "operationId": "manageReadStatus",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "messageIds",
                                    "status"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "only for event use",
                                        "type": "string",
                                        "example": "event"
                                    },
                                    "messageIds": {
                                        "description": "Comma-Separated messageIds",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "status": {
                                        "description": "Enter Status (Read / Unread)",
                                        "type": "string",
                                        "example": "Read"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/read-unread-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new message for meeting",
                "description": "Change Message status",
                "operationId": "changeMessageStatus",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "messageIds",
                                    "status"
                                ],
                                "properties": {
                                    "message_type": {
                                        "description": "only for event use",
                                        "type": "string",
                                        "example": "event"
                                    },
                                    "messageIds": {
                                        "description": "Comma-Separated messageIds",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "status": {
                                        "description": "Enter Status (Read / Unread)",
                                        "type": "string",
                                        "example": "Read"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/delete-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Delete Message",
                "description": "Delete Message",
                "operationId": "deleteMessage",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "Enter MessageId",
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/clear-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Clear Message",
                "description": "Clear Message",
                "operationId": "clearMessage",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "Enter userId",
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/export-chat": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Export Chat",
                "description": "Export Chat",
                "operationId": "exportChat",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "Enter userId",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "timezone": {
                                        "description": "Enter Timezone",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/task-chat": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Task Chat",
                "description": "Task Chat",
                "operationId": "taskChat",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "task_id"
                                ],
                                "properties": {
                                    "task_id": {
                                        "description": "Enter taskId",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "timezone": {
                                        "description": "Enter Timezone",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "start": {
                                        "description": "Enter start",
                                        "type": "number",
                                        "example": "0"
                                    },
                                    "limit": {
                                        "description": "Enter limit",
                                        "type": "number",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/add-reminder": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a new Reminder",
                "description": "Create a new message along with its sender/receiver, attachments, tasks, locations, and meetings.",
                "operationId": "addReminder",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "date",
                                    "time"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Enter Reminder Title",
                                        "type": "string",
                                        "example": "text"
                                    },
                                    "description": {
                                        "description": "Enter Reminder Description",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "date": {
                                        "description": "Enter Reminder Date",
                                        "type": "string",
                                        "example": "2024-06-15"
                                    },
                                    "time": {
                                        "description": "Enter Reminder Time",
                                        "type": "string",
                                        "example": "18:30:00"
                                    },
                                    "users": {
                                        "description": "Comma-separated IDs of the user",
                                        "type": "string",
                                        "example": "1,2,3,4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/forward-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Forward Message",
                "description": "Forward Messages",
                "operationId": "forwardMessage",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "Enter message id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "user_id": {
                                        "description": "Enter UserId",
                                        "type": "string",
                                        "example": "1,2,3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/message-contact": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Message Contact",
                "description": "Message Contact",
                "operationId": "messageContact",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "contactDetails"
                                ],
                                "properties": {
                                    "contact_details": {
                                        "description": "Enter Contact Json",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "receiver_id": {
                                        "description": "Enter Receiver Id",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/task-complete-incomplete": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Fetch Task Complete or Incomplete by message_id",
                "description": "This endpoint fetches the Task Complete or Incomplete for a given message_id, including the question and the options with vote counts.",
                "operationId": "f20cba075ed485757ca70fa61a5270e7",
                "parameters": [
                    {
                        "name": "message_id",
                        "in": "query",
                        "description": "The ID of the message to fetch votes for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "select",
                        "in": "query",
                        "description": "The status of the task (complete or incomplete)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "complete",
                                "incomplete"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task Complete or Incomplete details fetched successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task Complete or Incomplete fetched successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is your favorite programming language?"
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "option": {
                                                                "type": "string",
                                                                "example": "PHP"
                                                            },
                                                            "vote_count": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "profile_picture": {
                                                                "type": "string",
                                                                "example": "https://example.com/images/johndoe.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: Missing or invalid message_id or select",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The 'message_id' or 'select' parameter is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found: No options message found for the provided message_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No options message found for the provided message_id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/task-users-list": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Task Users List",
                "description": "Task Users List",
                "operationId": "taskUserList",
                "requestBody": {
                    "description": "Add Task user List Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Enter Type (Receive,Given,All Task)",
                                        "type": "string",
                                        "example": "Receive"
                                    },
                                    "timezone": {
                                        "description": "Enter Timezone",
                                        "type": "string",
                                        "example": "Asia/Kolkata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/sent-task-summary-email": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Task Summary Email",
                "description": "Task Summary Email",
                "operationId": "taskSummaryEmail",
                "requestBody": {
                    "description": "Add Task Summary Email Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "user_id",
                                    "summary"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Enter Type (Receive,Given,All Task)",
                                        "type": "string",
                                        "example": "Receive"
                                    },
                                    "user_id": {
                                        "description": "Enter Comma Separated User Id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "summary": {
                                        "description": "Enter Summary",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/sent-task-done": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "sent task done",
                "description": "Task done",
                "operationId": "taskDone",
                "requestBody": {
                    "description": "Add Task Done Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "user_id",
                                    "summary"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "Enter Type (Receive)",
                                        "type": "string",
                                        "example": "Receive"
                                    },
                                    "user_id": {
                                        "description": "Enter Comma Separated User Id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "summary": {
                                        "description": "Enter Summary",
                                        "type": "string",
                                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/meetings": {
            "get": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Get meeting details",
                "description": "Fetches meeting details based on the type (Receive or Given) and user ID.",
                "operationId": "b22bad31c5be82a6cbc2022acd2179fc",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of meetings to fetch. Can be 'Receive', 'Given', or omitted to fetch all meetings.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Receive",
                                "Given"
                            ]
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Enter Timezone",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Asia/Kolkata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Meetings fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "message_id": {
                                                        "type": "integer"
                                                    },
                                                    "mode": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "meeting_url": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    },
                                                    "users": {
                                                        "type": "string"
                                                    },
                                                    "latitude": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "longitude": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "location_url": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    },
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "created_by": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "format": "email"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "assigned_users": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string",
                                                                    "format": "email"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid type provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid type provided"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No meetings data found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Meetings Data Found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/meetings/{id}": {
            "get": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Get meeting details by message ID with user profiles",
                "description": "Retrieve meeting details and include accepted and/or declined user profiles.",
                "operationId": "getMeetingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Message ID of the meeting to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter users by 'accepted', 'declined', or leave blank for all",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accepted",
                                "declined"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Meeting retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "meeting": {
                                                    "type": "object"
                                                },
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Meeting not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Meeting not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/file-scan-upload": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Upload a file",
                "description": "Uploads a file and stores its information in the database",
                "operationId": "73d8d53bc62f237ea619615dee7d6b1a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file",
                                    "attachment_type"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "attachment_type": {
                                        "description": "Type of the attachment",
                                        "type": "string",
                                        "example": "scan"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File Uploaded Successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File Uploaded Successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "attachment_name": {
                                                    "type": "string",
                                                    "example": "file_name_123456.jpg"
                                                },
                                                "file_type": {
                                                    "type": "string",
                                                    "example": "jpg"
                                                },
                                                "attachment_path": {
                                                    "type": "string",
                                                    "example": "https://yourdomain.com/chat-file/file_name_123456.jpg"
                                                },
                                                "attachment_type": {
                                                    "description": "Type of the attachment",
                                                    "type": "string",
                                                    "default": "scan"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File is required."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get user documents",
                "description": "Retrieves a list of documents created by the currently authenticated user",
                "operationId": "getUserDocuments",
                "responses": {
                    "200": {
                        "description": "User documents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Documents retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "attachment_name": {
                                                        "type": "string"
                                                    },
                                                    "attachment_path": {
                                                        "type": "string"
                                                    },
                                                    "created_by": {
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/message-task-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Send notifications for message tasks",
                "description": "Sends notifications to users associated with tasks for a given message ID.",
                "operationId": "messageTaskNotification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "The ID of the message to fetch associated tasks.",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notifications sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notifications sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/sent-meeting-done": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "sent meeting done",
                "description": "Meeting done",
                "operationId": "meetingDone",
                "requestBody": {
                    "description": "Add Meeting Done Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id",
                                    "user_id",
                                    "type"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "Enter message_id",
                                        "type": "string",
                                        "example": "111"
                                    },
                                    "user_id": {
                                        "description": "Enter Comma Separated User Id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "type": {
                                        "description": "Enter 'accept' or 'decline'",
                                        "type": "string",
                                        "example": "accept"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/sent-event-done": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "sent event done",
                "description": "Event done",
                "operationId": "eventDone",
                "requestBody": {
                    "description": "Add Event Done Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "event_id",
                                    "user_id",
                                    "type"
                                ],
                                "properties": {
                                    "event_id": {
                                        "description": "Enter event_id",
                                        "type": "string",
                                        "example": "111"
                                    },
                                    "user_id": {
                                        "description": "Enter Comma Separated User Id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "type": {
                                        "description": "Enter 'attend' or 'notattend'",
                                        "type": "string",
                                        "example": "attend"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/comments": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Add a comment to a task",
                "description": "This endpoint allows authenticated users to add comments to a specific task.",
                "operationId": "addComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "type": "string",
                                        "example": "This is a sample comment."
                                    },
                                    "task_chat_id": {
                                        "type": "integer",
                                        "example": 318
                                    },
                                    "message_id": {
                                        "type": "integer",
                                        "example": 1434
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "comment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "task_id": {
                                                    "type": "integer",
                                                    "example": 318
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "This is a sample comment."
                                                },
                                                "task_chat_id": {
                                                    "type": "integer",
                                                    "example": 318
                                                },
                                                "message_id": {
                                                    "type": "integer",
                                                    "example": 1434
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-11-20 10:30:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-11-20 10:30:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token is invalid or expired."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/getTasks/comments": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Fetch all comments with pagination",
                "description": "Retrieve all comments for a specific message and task with pagination.",
                "operationId": "getComments",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "message_id": {
                                        "type": "integer",
                                        "example": 1434
                                    },
                                    "task_id": {
                                        "type": "integer",
                                        "example": 318
                                    },
                                    "per_page": {
                                        "description": "Number of comments per page (optional)",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "comments": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "task_id": {
                                                                "type": "integer",
                                                                "example": 318
                                                            },
                                                            "message_id": {
                                                                "type": "integer",
                                                                "example": 1434
                                                            },
                                                            "comment": {
                                                                "type": "string",
                                                                "example": "This is a sample comment."
                                                            },
                                                            "task_chat_id": {
                                                                "type": "integer",
                                                                "example": 318
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-20T10:30:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-11-20T10:30:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/v1/tasks/comments?page=1"
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/v1/tasks/comments?page=5"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/v1/tasks/comments?page=2"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/v1/tasks/comments"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token is invalid or expired."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/image-to-pdf": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Upload multiple images",
                "operationId": "3fb602bb3bf7b3f14f43ce23af2b4f2e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "images[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Images uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Images uploaded successfully"
                                        },
                                        "files": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "images/filename.jpg"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file format"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/get-single-message": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Get message details",
                "description": "Retrieve detailed information about a specific message by its ID.",
                "operationId": "getSingleMessage",
                "requestBody": {
                    "description": "Get message details",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "ID of the message to be updated",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "timezone": {
                                        "description": "Timezone of the user making the request",
                                        "type": "string",
                                        "example": "America/New_York",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message details retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The message_id field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/add-user-in-meeting": {
            "post": {
                "tags": [
                    "Meetings"
                ],
                "summary": "Add a user to a meeting",
                "description": "Add users in the meetings.",
                "operationId": "addUserInMeeting",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_id",
                                    "users"
                                ],
                                "properties": {
                                    "message_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "users": {
                                        "type": "string",
                                        "example": "1,2,3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User added to the meeting successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/daily-task-create-or-update": {
            "post": {
                "tags": [
                    "Daily Task"
                ],
                "summary": "Create or update a daily task",
                "description": "Creates a new daily task or updates an existing one based on task ID.",
                "operationId": "dailyTaskCreateOrUpdate",
                "requestBody": {
                    "description": "Payload for creating or updating a daily task",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "task_name",
                                    "checkbox",
                                    "task_day",
                                    "task_time",
                                    "users",
                                    "timezone"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "ID of the message associated with the task",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "DailyTask"
                                    },
                                    "task_name": {
                                        "description": "Name of the task",
                                        "type": "string",
                                        "example": "Task Name"
                                    },
                                    "checkbox": {
                                        "description": "Array of checkbox",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "CRUD Module"
                                        },
                                        "nullable": false
                                    },
                                    "task_day": {
                                        "description": "Task day name",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "task_time": {
                                        "description": "Task Time",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "users": {
                                        "description": "Comma-separated list of user IDs assigned to the task",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "timezone": {
                                        "description": "Timezone of the user creating the task",
                                        "type": "string",
                                        "example": "America/New_York",
                                        "nullable": true
                                    },
                                    "api_action": {
                                        "description": "create or update",
                                        "type": "string",
                                        "example": "",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Message not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/daily-task-delete": {
            "post": {
                "tags": [
                    "Daily Task"
                ],
                "summary": "Delete a daily task",
                "description": "Deletes a daily task by ID.",
                "operationId": "deleteDailyTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of the daily task to delete",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Message not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group-list": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Get list of group names",
                "description": "Get list Group names",
                "operationId": "be702dddd88e6a97f08572662e474cee",
                "responses": {
                    "200": {
                        "description": "List of group names",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group names fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Group Name"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group-member-search": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Search group members by name",
                "description": "Get list of group members based on the search term",
                "operationId": "5001d817607f90bb4703b4091eca0e87",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "The ID of the group for which members are fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "search_term",
                        "in": "query",
                        "description": "Search term for group member names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group members fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group members fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "group_name": {
                                                        "type": "string",
                                                        "example": "Group Name"
                                                    },
                                                    "members": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "member_name": {
                                                                    "type": "string",
                                                                    "example": "John Doe"
                                                                },
                                                                "profile_pic": {
                                                                    "type": "string",
                                                                    "example": "path-to-profile-pic"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/create-group": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Create Group",
                "description": "Create Group",
                "operationId": "createGroup",
                "requestBody": {
                    "description": "Create Group",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Enter First Name",
                                        "type": "string",
                                        "example": "Test"
                                    },
                                    "description": {
                                        "description": "Enter Description",
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "profile": {
                                        "description": "Profile Image",
                                        "type": "file"
                                    },
                                    "cover_image": {
                                        "description": "Cover Image",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/edit-group": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Edit Group",
                "description": "Edit Group",
                "operationId": "editGroup",
                "requestBody": {
                    "description": "Edit Group",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Enter Group Id",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "description": "Enter Group Name",
                                        "type": "string",
                                        "example": "Test"
                                    },
                                    "description": {
                                        "description": "Enter Group Description",
                                        "type": "string",
                                        "example": "This is a group description."
                                    },
                                    "profile": {
                                        "description": "Profile Image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "cover_image": {
                                        "description": "Cover Image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-list-for-group": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "User List for Group",
                "description": "User List for Group",
                "operationId": "userListForGroup",
                "requestBody": {
                    "description": "User List for Group",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Enter Group Id",
                                        "type": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/add-group-user": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Add Group User",
                "description": "Add Group User",
                "operationId": "addGroupUser",
                "requestBody": {
                    "description": "Add Group User",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id",
                                    "user_id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Enter Group Id",
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "user_id": {
                                        "description": "Enter Comma Separated User Id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/remove-group-user": {
            "post": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Remove Group User",
                "description": "Remove Group User",
                "operationId": "removeGroupUser",
                "requestBody": {
                    "description": "Remove Group User",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id",
                                    "user_id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Enter Group Id",
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "user_id": {
                                        "description": "Enter Comma Separated User Id",
                                        "type": "string",
                                        "example": "1,2,3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/group-delete": {
            "delete": {
                "tags": [
                    "Group Chat"
                ],
                "summary": "Delete a group by ID",
                "description": "Delete a group by its group_id, only if the logged-in user is the creator.",
                "operationId": "64557d295760c0a3cf7e53aa770897b3",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "The ID of the group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this group"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Otp",
                "description": "Send Otp",
                "operationId": "sendOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "country_code",
                                    "mobile",
                                    "type"
                                ],
                                "properties": {
                                    "country_code": {
                                        "description": "Enter Country Code",
                                        "type": "string",
                                        "example": "+91"
                                    },
                                    "mobile": {
                                        "description": "Enter Mobile Number",
                                        "type": "number",
                                        "example": "9876543210"
                                    },
                                    "type": {
                                        "description": "Enter Type (Login / Register)",
                                        "type": "string",
                                        "example": "Login"
                                    },
                                    "first_name": {
                                        "description": "Enter First Name",
                                        "type": "string",
                                        "example": "Test"
                                    },
                                    "last_name": {
                                        "description": "Enter Last Name",
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "profile": {
                                        "description": "Profile Image",
                                        "type": "file"
                                    },
                                    "cover_image": {
                                        "description": "Cover Image",
                                        "type": "file"
                                    },
                                    "device_token": {
                                        "description": "Enter Device Token",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                }
            }
        },
        "/api/v1/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Otp",
                "description": "Verify Otp",
                "operationId": "verifyOtp",
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "Enter Country Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "+91"
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "Enter Mobile Number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "9876543210"
                    },
                    {
                        "name": "otp",
                        "in": "query",
                        "description": "Enter OTP",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "123456"
                    },
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Enter Device Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                }
            }
        },
        "/api/v1/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "description": "Refresh Token",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                }
            }
        },
        "/api/v1/add-work-hours": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Add a new Reminder",
                "description": "Create a new message for Project Management.",
                "operationId": "addWorkHours",
                "requestBody": {
                    "description": "Add Message Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "start_date_time",
                                    "end_date_time",
                                    "timezone"
                                ],
                                "properties": {
                                    "start_date_time": {
                                        "description": "Enter Start Date Time",
                                        "type": "string",
                                        "example": "2024-05-17 19:15:00"
                                    },
                                    "end_date_time": {
                                        "description": "Enter End Date Time",
                                        "type": "string",
                                        "example": "2024-05-17 21:15:00"
                                    },
                                    "summary": {
                                        "description": "Enter Work Summary",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "location": {
                                        "description": "Enter location",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "timezone": {
                                        "description": "Enter timezone",
                                        "type": "string",
                                        "example": "Asia/Kolkata"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/work-hours": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Add a new Reminder",
                "description": "Create a new message for Project Management.",
                "operationId": "workHours",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Enter Month Name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2024-06"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/edit-work-hours-summary": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Edit a work hours",
                "description": "Create a new message for Project Management.",
                "operationId": "editWorkHoursSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter work hour Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "description": "Enter work hour Summary",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Enter location",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/add-note": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Add a new Note",
                "description": "Create a new note for Project Management.",
                "operationId": "addNote",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Enter Note Title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Enter Note description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/note": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "new Note list",
                "description": "List of note for Project Management.",
                "operationId": "noteLost",
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/note-details": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Note Details",
                "description": "Details of note for Project Management.",
                "operationId": "noteDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter Note Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/edit-note": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Edit Note",
                "description": "Edit note for Project Management.",
                "operationId": "editNotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter Note Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Enter Note Title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Enter Note Description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/delete-note": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Delete Note",
                "description": "Delete note for Project Management.",
                "operationId": "deleteNotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter Note Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/send-work-hours-email": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Send Work Hours email",
                "description": "Send Email of work Hours.",
                "operationId": "sendWorkHoursEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter Comma Separated UserId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1,2,3"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Enter Month Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2024-06"
                    },
                    {
                        "name": "summary",
                        "in": "query",
                        "description": "Enter Email Summary",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events-create-update": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Event create or update",
                "description": "Event create or update",
                "operationId": "eventsCreateUpdate",
                "requestBody": {
                    "description": "Event Create or Update Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "event_title",
                                    "event_description",
                                    "event_date",
                                    "event_time",
                                    "latitude",
                                    "longitude",
                                    "location_url",
                                    "location"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Event id used only update request",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "event_title": {
                                        "description": "Event Title",
                                        "type": "string",
                                        "example": "Test Event"
                                    },
                                    "event_description": {
                                        "description": "Event Description",
                                        "type": "string",
                                        "example": "Enter Event Description"
                                    },
                                    "event_date": {
                                        "description": "Event date",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "event_time": {
                                        "description": "Event Time",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "event_image": {
                                        "description": "Event Image",
                                        "type": "file"
                                    },
                                    "latitude": {
                                        "description": "Event latitude",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "longitude": {
                                        "description": "Event longitude",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "location_url": {
                                        "description": "Event location URL",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "location": {
                                        "description": "Event location",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "users": {
                                        "description": "Assign event for comma separated users id",
                                        "type": "string",
                                        "example": "1,2,3,4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events-list": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Event Listing",
                "description": "Event Listing",
                "operationId": "eventsList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter User Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Enter Timezone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Event Title Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events-delete": {
            "post": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Delete Event",
                "description": "Delete Event",
                "operationId": "eventsDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter User Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    },
                    {
                        "name": "event_id",
                        "in": "query",
                        "description": "Enter Event Id",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/event/{id}": {
            "get": {
                "tags": [
                    "Project Management"
                ],
                "summary": "Get event details by event ID with user profiles",
                "description": "Retrieve event details and include attend and/or notattned user profiles.",
                "operationId": "getEventById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "event ID of the event to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter users by 'attend', 'notattend', or leave blank for all",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "attend",
                                "notattend"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "event": {
                                                    "type": "object"
                                                },
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/send-email": {
            "post": {
                "tags": [
                    "Emails"
                ],
                "summary": "Send email with attachment",
                "description": "Sends an email with optional file attachment to multiple recipients",
                "operationId": "sendEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "emails",
                                    "file_upload"
                                ],
                                "properties": {
                                    "emails": {
                                        "description": "Comma-separated email addresses",
                                        "type": "string",
                                        "example": "xyz@gmail.com,abc@gmail.com"
                                    },
                                    "file_upload": {
                                        "description": "File to attach",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emails sent successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/simple-task-create-or-update": {
            "post": {
                "tags": [
                    "Simple Task"
                ],
                "summary": "Create or update a simple task",
                "description": "Creates a new simple task or updates an existing one based on task ID.",
                "operationId": "simpleTaskCreateOrUpdate",
                "requestBody": {
                    "description": "Payload for creating or updating a simple task",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "message_type",
                                    "title",
                                    "timezone"
                                ],
                                "properties": {
                                    "message_id": {
                                        "description": "ID of the message associated with the task",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "message_type": {
                                        "description": "Type of the message",
                                        "type": "string",
                                        "example": "SimpleTask"
                                    },
                                    "title": {
                                        "description": "Title of the task",
                                        "type": "string",
                                        "example": "Task Title"
                                    },
                                    "task_date": {
                                        "description": "Task date",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "task_time": {
                                        "description": "Task Time",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "users": {
                                        "description": "Comma-separated list of user IDs assigned to the task",
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "priority_task": {
                                        "description": "Indicates if the task is a priority (true or false)",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "timezone": {
                                        "description": "Timezone of the user creating the task",
                                        "type": "string",
                                        "example": "America/New_York",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Message not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/check-mobile-exists": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Check Mobile Exists",
                "description": "Check Mobile Exists",
                "operationId": "checkMobileExists",
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "Enter Country Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "+91"
                    },
                    {
                        "name": "mobile",
                        "in": "query",
                        "description": "Enter Mobile Number",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "9876543210"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                }
            }
        },
        "/api/v1/user-registration": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Registration",
                "description": "User Registration",
                "operationId": "userRegistration",
                "requestBody": {
                    "description": "User Registration Request",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "country_code",
                                    "mobile",
                                    "otp",
                                    "device_token"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Enter First Name",
                                        "type": "string",
                                        "example": "Test"
                                    },
                                    "last_name": {
                                        "description": "Enter Last Name",
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "country_code": {
                                        "description": "Enter Country Code",
                                        "type": "string",
                                        "example": "+91"
                                    },
                                    "mobile": {
                                        "description": "Enter Mobile Number",
                                        "type": "number",
                                        "example": "9876543210"
                                    },
                                    "otp": {
                                        "description": "Enter OTP",
                                        "type": "number",
                                        "example": "123456"
                                    },
                                    "device_token": {
                                        "description": "Enter Device Token",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "profile": {
                                        "description": "Profile Image",
                                        "type": "file"
                                    },
                                    "cover_image": {
                                        "description": "Cover Image",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "device_token",
                        "in": "query",
                        "description": "Enter Device Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users-mobile-numbers": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Mobile Numbers",
                "description": "User Mobile Numbers",
                "operationId": "userMobileNumbers",
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-list": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User List",
                "description": "User List",
                "operationId": "userList",
                "parameters": [
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Enter Timezone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Enter Search Value",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-details": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Details",
                "description": "User Details",
                "operationId": "userDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter userId",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Enter Start",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Enter Limit",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Enter Timezone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Enter Message type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "filter"
                    },
                    {
                        "name": "startchat",
                        "in": "query",
                        "description": "Enter Yes or No",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Yes or No"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-group-details": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Group Details",
                "description": "User Group Details",
                "operationId": "userGroupDetails",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Enter groupId",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Enter Start",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "0"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Enter Limit",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "example": "10"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Enter Timezone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Enter Message type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks/update": {
            "post": {
                "tags": [
                    "Update Tasks"
                ],
                "summary": "Update multiple tasks based on message ID",
                "operationId": "b6af4f9a3c15b42562428d841c37ea3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "message_id": {
                                        "type": "integer",
                                        "example": 1132
                                    },
                                    "task_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 71
                                        }
                                    },
                                    "task_name": {
                                        "type": "string",
                                        "example": "Main Task Name"
                                    },
                                    "checkbox": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Task 1 Checkbox"
                                        }
                                    },
                                    "task_checked": {
                                        "type": "array",
                                        "items": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "example": "user1@example.com,user2@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tasks updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks updated successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "message_id": {
                                                    "type": "integer",
                                                    "example": 1132
                                                },
                                                "task_ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 71
                                                    }
                                                },
                                                "task_name": {
                                                    "type": "string",
                                                    "example": "Main Task Name"
                                                },
                                                "checkbox": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Task 1 Checkbox"
                                                    }
                                                },
                                                "task_checked": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "receiver_id": {
                                                    "type": "string",
                                                    "example": "user1@example.com,user2@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message ID is required."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found or not updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found or not updated"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/edit-profile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Edit Profile",
                "description": "Edit Profile",
                "operationId": "editProfile",
                "requestBody": {
                    "description": "Edit Profile",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "first_name": {
                                        "description": "Enter First Name",
                                        "type": "string",
                                        "example": "Test"
                                    },
                                    "last_name": {
                                        "description": "Enter Last Name",
                                        "type": "string",
                                        "example": "User"
                                    },
                                    "country_code": {
                                        "description": "Enter Country Code",
                                        "type": "string",
                                        "example": "+91"
                                    },
                                    "mobile": {
                                        "description": "Enter Mobile Number",
                                        "type": "number",
                                        "example": "9876543210"
                                    },
                                    "email": {
                                        "description": "Enter Email Address",
                                        "type": "string",
                                        "example": "test@yopmail.com"
                                    },
                                    "title": {
                                        "description": "Enter title",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "description": "Enter Description",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "account_id": {
                                        "description": "Enter Account Id",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "profile": {
                                        "description": "Profile Image",
                                        "type": "file"
                                    },
                                    "website_url": {
                                        "description": "Enter Website Url",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "cover_image": {
                                        "description": "Cover Image",
                                        "type": "file"
                                    },
                                    "instagram_profile_url": {
                                        "description": "Enter Instagram Profile Url",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "facebook_profile_url": {
                                        "description": "Enter Facebook Profile Url",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "twitter_profile_url": {
                                        "description": "Enter Twitter Profile Url",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "youtube_profile_url": {
                                        "description": "Enter Youtube Profile Url",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "linkedin_profile_url": {
                                        "description": "Enter LinkedIn Profile Url",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "address": {
                                        "description": "Enter your full address",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "longitude": {
                                        "description": "Enter longitude",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "latitude": {
                                        "description": "Enter latitude",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/delete-chat-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Delete Chat Users",
                "description": "Delete Chat Users",
                "operationId": "deleteChatUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter userId",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/deleted-user-list": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Deleted User List",
                "description": "Deleted User List",
                "operationId": "deletedUserList",
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/deleted-user-account": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Deleted User Account",
                "description": "Deleted User Account",
                "operationId": "deletedUserAccount",
                "responses": {
                    "200": {
                        "description": "json schema",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Invalid Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/update-task-details": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update task details",
                "description": "Updates the details of a specific task assigned to the authenticated user.",
                "operationId": "updateTaskDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Enter taskId",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    },
                    {
                        "name": "message_id",
                        "in": "query",
                        "description": "Enter messageId",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "task_name": {
                                                    "type": "string",
                                                    "example": "Sample Task"
                                                },
                                                "task_checked_users": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "read_status": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-08T10:18:02"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User not assigned to this task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not assigned to this task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while updating the task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the task"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/block-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Block a user",
                "description": "Blocks a user by setting `is_blocked = true`",
                "operationId": "blockUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user to block",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User blocked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User has been blocked successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User ID is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": ""
        },
        {
            "name": "Call Logs",
            "description": "Call Logs"
        },
        {
            "name": "Messages",
            "description": "Messages"
        },
        {
            "name": "Files",
            "description": "Files"
        },
        {
            "name": "Meetings",
            "description": "Meetings"
        },
        {
            "name": "Documents",
            "description": "Documents"
        },
        {
            "name": "Notifications",
            "description": "Notifications"
        },
        {
            "name": "Daily Task",
            "description": "Daily Task"
        },
        {
            "name": "Group Chat",
            "description": "Group Chat"
        },
        {
            "name": "Project Management",
            "description": "Project Management"
        },
        {
            "name": "Emails",
            "description": "Emails"
        },
        {
            "name": "Simple Task",
            "description": "Simple Task"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Update Tasks",
            "description": "Update Tasks"
        }
    ]
}